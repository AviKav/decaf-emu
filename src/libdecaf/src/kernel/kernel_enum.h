#ifndef KERNEL_ENUM_H
#define KERNEL_ENUM_H

#include <common/enum_start.h>

ENUM_NAMESPACE_BEG(kernel)

ENUM_BEG(IMCommand, uint32_t)
   ENUM_VALUE(SetNvParameter,       1)
   ENUM_VALUE(SetParameter,         2)
   ENUM_VALUE(GetParameter,         3)
   ENUM_VALUE(GetHomeButtonParams,  7)
   ENUM_VALUE(GetTimerRemaining,    8)
   ENUM_VALUE(GetNvParameter,       9)
ENUM_END(IMCommand)

ENUM_BEG(IMError, uint32_t)
   ENUM_VALUE(OK,                   0)
ENUM_END(IMError)

ENUM_BEG(IMTimer, uint32_t)
   ENUM_VALUE(Dim,                  0)
   ENUM_VALUE(APD,                  1)
ENUM_END(IMTimer)

ENUM_BEG(IMParameter, uint32_t)
   ENUM_VALUE(DimEnabled,           1)
   ENUM_VALUE(DimPeriod,            2)
   ENUM_VALUE(APDEnabled,           3)
   ENUM_VALUE(APDPeriod,            4)
   ENUM_VALUE(Unknown5,             5)
   ENUM_VALUE(DimEnableTv,          9)
   ENUM_VALUE(DimEnableDrc,         10)
ENUM_END(IMParameter)

ENUM_BEG(IOSCommand, int32_t)
   ENUM_VALUE(Open,                 1)
   ENUM_VALUE(Close,                2)
   ENUM_VALUE(Read,                 3)
   ENUM_VALUE(Write,                4)
   ENUM_VALUE(Seek,                 5)
   ENUM_VALUE(Ioctl,                6)
   ENUM_VALUE(Ioctlv,               7)
   ENUM_VALUE(Reply,                8)
ENUM_END(IOSCommand)

ENUM_BEG(IOSCpuId, uint32_t)
   ENUM_VALUE(ARM,                  0)
   ENUM_VALUE(PPC0,                 1)
   ENUM_VALUE(PPC1,                 2)
   ENUM_VALUE(PPC2,                 3)
ENUM_END(IOSCpuId)

ENUM_BEG(IOSError, int32_t)
   ENUM_VALUE(OK,                   0)
   ENUM_VALUE(Access,               -1)
   ENUM_VALUE(Exists,               -2)
   ENUM_VALUE(Intr,                 -3)
   ENUM_VALUE(Invalid,              -4)
   ENUM_VALUE(Max,                  -5)
   ENUM_VALUE(NoExists,             -6)
   ENUM_VALUE(QEmpty,               -7)
   ENUM_VALUE(QFull,                -8)
   ENUM_VALUE(Unknown,              -9)
   ENUM_VALUE(NotReady,             -10)
   ENUM_VALUE(Ecc,                  -11)
   ENUM_VALUE(EccCrit,              -12)
   ENUM_VALUE(BadBlock,             -13)
   ENUM_VALUE(InvalidObjType,       -14)
   ENUM_VALUE(InvalidRNG,           -15)
   ENUM_VALUE(InvalidFlag,          -16)
   ENUM_VALUE(InvalidFormat,        -17)
   ENUM_VALUE(InvalidVersion,       -18)
   ENUM_VALUE(InvalidSigner,        -19)
   ENUM_VALUE(FailCheckValue,       -20)
   ENUM_VALUE(FailInternal,         -21)
   ENUM_VALUE(FailAlloc,            -22)
   ENUM_VALUE(InvalidSize,          -23)
   ENUM_VALUE(NoLink,               -24)
   ENUM_VALUE(ANFailed,             -25)
   ENUM_VALUE(MaxSemCount,          -26)
   ENUM_VALUE(SemUnavailable,       -27)
   ENUM_VALUE(InvalidHandle,        -28)
   ENUM_VALUE(InvalidArg,           -29)
   ENUM_VALUE(NoResource,           -30)
   ENUM_VALUE(Busy,                 -31)
   ENUM_VALUE(Timeout,              -32)
   ENUM_VALUE(Alignment,            -33)
   ENUM_VALUE(BSP,                  -34)
   ENUM_VALUE(DataPending,          -35)
   ENUM_VALUE(Expired,              -36)
   ENUM_VALUE(NoReadAccess,         -37)
   ENUM_VALUE(NoWriteAccess,        -38)
   ENUM_VALUE(NoReadWriteAccess,    -39)
   ENUM_VALUE(ClientTxnLimit,       -40)
   ENUM_VALUE(StaleHandle,          -41)
   ENUM_VALUE(UnknownValue,         -42)
ENUM_END(IOSError)

ENUM_BEG(IOSOpenMode, int32_t)
   ENUM_VALUE(None,                 0)
   ENUM_VALUE(Read,                 1)
   ENUM_VALUE(Write,                2)
   ENUM_VALUE(ReadWrite,            Read | Write)
ENUM_END(IOSOpenMode)

ENUM_BEG(MapPermission, uint32_t)
   ENUM_VALUE(ReadOnly,                1)
   ENUM_VALUE(ReadWrite,               2)
ENUM_END(MapPermission)

ENUM_BEG(VirtualMemoryType, uint32_t)
   ENUM_VALUE(Invalid,                 0)
   ENUM_VALUE(MappedReadOnly,          1)
   ENUM_VALUE(MappedReadWrite,         2)
   ENUM_VALUE(Free,                    3)
   ENUM_VALUE(Allocated,               4)
ENUM_END(VirtualMemoryType)

ENUM_BEG(SyscallID, uint32_t)
   ENUM_VALUE(AllocVirtAddr,           0x3800)
   ENUM_VALUE(FreeVirtAddr,            0x3900)
   ENUM_VALUE(GetMapVirtAddrRange,     0x3A00)
   ENUM_VALUE(GetDataPhysAddrRange,    0x3B00)
   ENUM_VALUE(GetAvailPhysAddrRange,   0x3C00)
   ENUM_VALUE(MapMemory,               0x3D00)
   ENUM_VALUE(UnmapMemory,             0x3E00)
   ENUM_VALUE(QueryVirtAddr,           0x7500)
ENUM_END(SyscallID)

ENUM_NAMESPACE_END(kernel)

#include <common/enum_end.h>

#endif // ifdef KERNEL_ENUM_H
